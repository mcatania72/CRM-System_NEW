# FASE 6: Ingress con Traefik per Load Balancing
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: crm-ingress
  namespace: crm-system
  labels:
    app: crm
    component: ingress
  annotations:
    # Traefik annotations
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/router.entrypoints: web
    
    # SSL/TLS future preparation
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # Redirect and rewrite rules
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
    
    # Middleware per CORS e security
    traefik.ingress.kubernetes.io/router.middlewares: crm-system-cors@kubernetescrd
    
    # Load balancer configuration
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
spec:
  rules:
  # Regola principale per l'IP del load balancer
  - host: 192.168.1.29
    http:
      paths:
      # Frontend principale
      - path: /crm
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80
      
      # API backend
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 4001
      
      # Root redirect al CRM (opzionale)
      - path: /
        pathType: Exact
        backend:
          service:
            name: frontend-service
            port:
              number: 80
  
  # Regola alternativa per hostname (opzionale)
  - host: crm.devvm.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 4001
  
  # TLS configuration (preparazione per futuro)
  # tls:
  # - hosts:
  #   - crm.devvm.local
  #   secretName: crm-tls-secret
---
# Middleware per CORS (Traefik v2+)
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: cors
  namespace: crm-system
spec:
  headers:
    accessControlAllowMethods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
    accessControlAllowOriginList:
      - "http://192.168.1.29"
      - "http://192.168.1.29:30002"
      - "http://crm.devvm.local"
    accessControlAllowHeaders:
      - "Content-Type"
      - "Authorization"
      - "X-Requested-With"
    accessControlAllowCredentials: true
    accessControlMaxAge: 3600
---
# Middleware per security headers
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: security-headers
  namespace: crm-system
spec:
  headers:
    customRequestHeaders:
      X-Forwarded-Proto: "https"
    customResponseHeaders:
      X-Frame-Options: "SAMEORIGIN"
      X-Content-Type-Options: "nosniff"
      X-XSS-Protection: "1; mode=block"
      Strict-Transport-Security: "max-age=31536000; includeSubDomains"
      Referrer-Policy: "strict-origin-when-cross-origin"
---
# Service Monitor per Prometheus (futuro monitoring)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: crm-ingress-monitor
  namespace: crm-system
  labels:
    app: crm
    component: ingress
spec:
  selector:
    matchLabels:
      app: traefik
  endpoints:
  - port: traefik
    interval: 30s
    path: /metrics
